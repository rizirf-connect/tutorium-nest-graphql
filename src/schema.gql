# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthCredentialsInput {
  email: String!
  password: String!
}

type AuthResponse {
  accessToken: String!
  user: User!
}

type Course {
  id: Int!
  name: String!
  type: CourseType!
}

enum CourseType {
  IB
  VCE
}

input CreateCourseInput {
  name: String!
  type: CourseType!
}

input CreateLiveSessionInput {
  courseId: Int!
  duration: Int!
  startAt: DateTime!
  url: String!
}

input CreateRecordedSessionInput {
  courseId: Int!
  price: Float!
}

input CreateStudentSession {
  sessionId: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterCourseInput {
  type: CourseType!
}

input FilterSessionInput {
  studentId: Int
  userId: Int
}

input FilterUserInput {
  role: Role!
}

input FindUserInput {
  email: String
  id: Int
}

type LiveSession {
  duration: Int!
  id: Int!
  startAt: DateTime!
  url: String!
}

type Mutation {
  createCourse(data: CreateCourseInput!): Course!
  createLiveSession(data: CreateLiveSessionInput!): Session!
  createRecordedSession(data: CreateRecordedSessionInput!): Session!
  enrollStudent(data: CreateStudentSession!): User!
  removeCourse(id: Int!): Course!
  signIn(credentials: AuthCredentialsInput!): AuthResponse!
  updateCourse(updateCourseInput: UpdateCourseInput!): Course!
}

type Query {
  course(id: Int!): Course!
  courses(where: FilterCourseInput): [Course!]!
  me: User!
  sessions(where: FilterSessionInput): [Session!]!
  user(where: FindUserInput!): User!
  users(where: FilterUserInput!): [User!]!
}

type RecordedSession {
  id: Int!
  price: Float!
}

enum Role {
  ADMIN
  STUDENT
  TUTOR
}

type Session {
  course: Course!
  courseId: Int!
  detail: SessionUnion
  id: Int!
  students: [User!]
  type: SessionType!
}

enum SessionType {
  LIVE
  RECORDED
}

union SessionUnion = LiveSession | RecordedSession

input UpdateCourseInput {
  id: Int!
  name: String
  type: CourseType
}

type User {
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  role: Role!
  sessions: [Session!]!
}